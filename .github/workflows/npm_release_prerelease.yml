name: <NPM pre-release> Publish node packages

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+-dev.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CORE_PACKAGE_DIR: "./packages/mapray"
      UI_PACKAGE_DIR: "./packages/ui"
    outputs:
      tag_name: ${{ steps.get_version.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - run:  git fetch --prune --unshal
      - name: Get current version
        run: |
          TAG_NAME=$(echo ${{ github.ref }} |  grep -o -E "(dev|alpha|beta|rc)")
          echo "::set-output name=tag_name::${TAG_NAME}"
        id: get_version
        shell: bash
      - name: Setup
        run: yarn install
      - name: Build maprayJS
        run: yarn build
      - name: Packing core package
        run: yarn pack
        working-directory: ./packages/mapray
      - name: Packing ui package
        run: yarn pack
        working-directory: ./packages/ui
      - name: Upload core packages
        uses: actions/upload-artifact@v2
        with:
          name: core_pack
          path: |
            ${{ env.CORE_PACKAGE_DIR }}/*.tgz
            ${{ env.CORE_PACKAGE_DIR }}/package.json
      - name: Upload ui packages
        uses: actions/upload-artifact@v2
        with:
          name: ui_pack
          path: |
            ${{ env.UI_PACKAGE_DIR }}/*.tgz
            ${{ env.UI_PACKAGE_DIR }}/package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      CORE_PACKAGE_DIR: "./dist_packages/mapray"
      UI_PACKAGE_DIR: "./dist_packages/ui"
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: https://registry.npmjs.org
          scope: '@mapray'
      - name: Download core packages
        uses: actions/download-artifact@v2
        with:
          name: core_pack
          path: ${{ env.CORE_PACKAGE_DIR }}
      - name: Download ui packages
        uses: actions/download-artifact@v2
        with:
          name: ui_pack
          path: ${{ env.UI_PACKAGE_DIR }}
      - name: Publish core to npm packages
        run: npm publish --tag ${{ needs.build.outputs.tag_name }}
        working-directory: ${{ env.CORE_PACKAGE_DIR }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish ui to Github packages
        run: npm publish --tag ${{ needs.build.outputs.tag_name }}
        working-directory: ${{ env.UI_PACKAGE_DIR }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
